@model Westwind.AspNetCore.Markdown.MarkdownModel
<html>
<head>
    @if (!string.IsNullOrEmpty(Model.BasePath))
    {
        <base href="@Model.BasePath" />
    }
    <title>@Model.Title</title>
    <!-- *** Markdown Themes: Github, Dharkan, Westwind, Medium, Blackout -->
    <link rel="stylesheet" href="~/markdown-themes/@(Model.FolderConfiguration.RenderTheme)/Theme.css" />
    <link rel="stylesheet" href="~/markdown-themes/scripts/fontawesome/css/font-awesome.min.css" />
    <style>   
        /* vs2015 theme specific*/
         pre {            
            overflow-x: auto;
            white-space: pre;
            word-break: normal;
            word-wrap: normal;            
        }
        pre > code {
            white-space: pre;
        }
    </style>
</head>
<body>
    <h1>Another test</h1>

    <div id="MainContent">                  
        @Model.RenderedMarkdown 
    </div>

    <script src="~/markdown-themes/scripts/highlightjs/highlight.pack.js"></script>
    <!-- https://github.com/RickStrahl/highlightjs-badge - copy code and syntax id on code snippets -->
    <script src="~/markdown-themes/scripts/highlightjs-badge.min.js"></script>
    
    <!-- *** Code Syntax Themes: vs2015, vs, github, monokai, monokai-sublime, twilight -->
    <link href="~/markdown-themes/scripts/highlightjs/styles/@(Model.FolderConfiguration.SyntaxTheme).css" rel="stylesheet" />
    <script>
        setTimeout(function () {
            var pres = document.querySelectorAll("pre>code");
            for (var i = 0; i < pres.length; i++) {
                hljs.highlightBlock(pres[i]);
            }
        });
      
        setTimeout(function() {
            var options = {  contentSelector: "#MainContent" }
            window.highlightJsBadge(options);
        },200);
        

    </script>
</body>
</html>